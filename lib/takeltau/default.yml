---
cmd_docker: 'docker'
cmd_docker_check_daemon_docker_version: '%{docker} --version'
cmd_docker_container_check_existing_docker_ps: '%{docker} ps --filter name=^%{container}$ --quiet'
cmd_docker_container_check_network_docker_network: '%{docker} network ls --quiet --filter name=^%{network}$'
cmd_docker_container_check_orphaned_docker_exec: '%{docker} exec --interactive %{container} ps a'
cmd_docker_container_create: '%{docker} run --detach --env TAKELAGE_PROJECT_BASE_DIR=%{workdir} --env TZ=%{timezone} --hostname %{container} --name %{container} --network %{container} --rm --shm-size %{shmsize} --tty --volume %{homedir}:/hostdir --volume %{workdir}:/project %{volume_dev} --workdir /project %{docker_run_options} %{image} %{entrypoint} --gid %{gid} --home %{homedir} --uid %{uid} --username %{username} --extra=%{extra} %{entrypoint_options}'
cmd_docker_container_create_network: '%{docker} network create %{network}'
cmd_docker_container_enter_container: '%{docker} exec --interactive --tty %{container} %{loginpoint} --username %{username}'
cmd_docker_container_get_container_name: '%{docker} ps --filter id=%{container} --format "{{.Names}}"'
cmd_docker_container_get_containers: '%{docker} ps --all --filter name=^%{docker_repo}_ --quiet'
cmd_docker_container_remove_network: '%{docker} network rm %{network}'
cmd_docker_container_docker_exec: '%{docker} exec %{container} su %{username} -c "LANG=en_US.UTF-8 %{command}"'
cmd_docker_container_stop_container: '%{docker} stop %{container}'
cmd_docker_image_tag_check_docker_images: '%{docker} images --quiet %{image}'
cmd_docker_image_tag_list_docker_images: '%{docker} images %{docker_user}\/%{docker_repo} --format "{{.Tag}}"'
cmd_docker_image_update_docker_pull: '%{docker} pull %{docker_user}/%{docker_repo}:%{docker_tag}'
cmd_docker_image_update_docker_remove_dangling: '%{docker} image prune --force'
cmd_git: 'git'
cmd_git_check_clean_git_unstaged: 'git diff --exit-code'
cmd_git_check_clean_git_uncommitted: 'git diff --cached --exit-code'
cmd_git_check_clean_git_status: 'git status --porcelain'
cmd_git_check_hg_get_git_branch: 'git symbolic-ref HEAD'
cmd_git_check_workspace_git_repo: 'git -C %{dir} rev-parse'
cmd_git_check_workspace_pwd: 'pwd'
cmd_git_lib_git_add_hg_dirs: 'git add \*/.hg/\*'
cmd_git_lib_git_commit: 'git commit --message="%{message}"'
cmd_git_lib_git_pull_origin: 'git pull origin %{main}'
cmd_git_lib_git_push_origin: 'git push origin %{main}'
cmd_hg_list_repos: 'cd %{root}; find * -type d -name ".hg" | parallel --keep-order hg paths default --repository {//} --template "hg\ clone\ {url}\ " \; echo {//}'
cmd_hg_pull_repos: 'cd %{root}; find * -type d -name ".hg" | parallel --keep-order echo \; cd {//} \; pwd \; hg pull --update'
cmd_hg_push_repos: 'cd %{root}; find * -type d -name ".hg" | parallel --keep-order echo \; cd {//} \; pwd \; hg commit --addremove --message "Update\ hg\ repos" \; hg bookmarks --force main \; hg push'
cmd_info_status_lib_git_name: 'git -C %{root} config user.name'
cmd_info_status_lib_git_email: 'git -C %{root} config user.email'
cmd_info_status_lib_git_signingkey: 'git -C %{root} config user.signingKey'
cmd_info_status_lib_git_key_available: 'gpg --list-key %{key}'
cmd_info_status_arch_get_arch: 'arch'
cmd_info_status_gopass_root_store: 'gopass config | grep "path" | cut -d " " -f 2'
cmd_info_status_gpg_agent: 'gpg-connect-agent /bye'
cmd_info_status_gpg_keys: 'gpg --list-keys'
cmd_info_status_hg_username: 'hg config ui.username'
cmd_info_status_ssh_keys: 'ssh-add -l'
cmd_info_status_ssh_socket: 'gpgconf --list-dirs agent-ssh-socket'
cmd_init_lib_git_init: 'git init && git checkout -b main'
cmd_init_lib_git_add_all: 'git add --all'
cmd_init_lib_git_commit_initial: 'git commit -m "Initial commit"'
cmd_init_lib_hg_clone: 'bash hgclone'
cmd_mutagen: 'mutagen'
cmd_mutagen_check_daemon_host_connection: 'mutagen forward list --label-selector="%{hostlabel}"'
cmd_mutagen_forward_socket_create: 'mutagen forward create --name=%{socketname} --label=%{hostlabel} --label=%{takellabel} docker://%{username}@%{container}:unix:%{containersock} unix:%{hostsock}'
cmd_mutagen_forward_socket_docker: 'mutagen forward create --name=%{socketname} --label=%{hostlabel} --label=%{takellabel} --socket-group-source=docker --socket-permission-mode=0660 docker://root@%{container}:unix:/var/run/docker.sock unix:%{hostsock}'
cmd_mutagen_forward_socket_check: 'mutagen forward list %{socketname}'
cmd_mutagen_forward_socket_terminate: 'mutagen forward terminate %{socketname}'
cmd_mutagen_forward_socket_remove: 'rm -f ~/.mutagen/daemon/*'
cmd_mutagen_forward_socket_list: 'mutagen forward list --label-selector="%{takellabel}"'
docker_debug: 'ansible/roles/takel_takelage/files/takelscripts'
docker_entrypoint_extra: ''
docker_entrypoint_options: ''
docker_registry: 'https://registry.hub.docker.com'
docker_repo: 'takelage'
docker_run_options: ''
docker_shm_size: '512M'
docker_tag: 'latest'
docker_user: 'takelwerk'
git_hg_branch: 'main'
info_project_main: 'project.yml'
info_project_private: 'private/project.yml'
login_wait_for_sockets: '0'
mutagen_socket_path_docker_host: '/var/run/docker.sock'
mutagen_socket_path_gpg_container: '~/.gnupg/S.gpg-agent'
mutagen_socket_path_gpg_host: '~/.gnupg/S.gpg-agent'
mutagen_socket_path_mutagen_container: '~/.mutagen/daemon/daemon.sock'
mutagen_socket_path_mutagen_host: '~/.mutagen/daemon/daemon.sock'
mutagen_socket_path_ssh_container: '~/.gnupg/S.gpg-agent.ssh'
mutagen_socket_path_ssh_host: '~/.gnupg/S.gpg-agent.ssh'
mutagen_socket_takelage_label: 'type=takelage'
ship_name: 'takelship'
ship_hostname: '%{ship_name}_%{unique}'
ship_default_project: 'default'
ship_env: '--env TAKELSHIP_UPDATE=true'
ship_ports: ''
ship_user: 'takelwerk'
ship_repo: 'takelship'
ship_tag: 'latest'
ship_data_dir: 'takelship'
ship_takelship_yml: '%{pwd}/%{ship_data_dir}/compose/projects/takelship.yml'
ship_podman_localhost: '127.0.0.1'
ship_docker_host: '32375'
ship_default_docker_host: '32375'
cmd_ship_docker: 'docker'
cmd_ship_project_start_docker_run_nonprivileged: '%{ship_docker} run --rm --interactive %{image} %{command}'
cmd_ship_project_start_docker_run_privileged: '%{ship_docker} run --privileged --rm --detach --name %{ship_hostname} --hostname %{ship_hostname} %{ship_env} %{ports} --volume ./%{ship_data_dir}:/home/podman/takelship %{image} %{command}'
cmd_ship_project_start_docker_stop: '%{ship_docker} stop %{ship_hostname}'
cmd_ship_container_check_existing_docker_ps: '%{ship_docker} ps --filter name=^%{ship_name}$ --quiet'
cmd_ship_container_docker: '%{ship_docker} exec --interactive %{tty} %{ship_hostname} %{command}'
cmd_ship_container_login: 'bash'
cmd_docker_container_get_mounted_dir: '%{ship_docker} container inspect %{ship_hostname} --format "{{ (index .Mounts 0).Source }}"'
